Eliminé el archivo de tipos y en mi tsconfig.json tengo ahora esto:
{
  "compilerOptions": {
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "target": "ES2022",
    "outDir": "./dist",
    "rootDir": "./src",
    "esModuleInterop": true,
    "types": ["node"],
    "resolveJsonModule": true
  }
}

Mi controller se ve así:
import { Request, Response } from "express";
import Profile from "../models/profile.model.js";
import { errorAndLogHandler, errorLevels } from "../utils/errorHandler.js";

const create = async (req: Request, res: Response) => {
  try {
    const profile = await Profile.create(req.body);

    res.status(201).json(
      await errorAndLogHandler({
        level: errorLevels.info,
        message: "Profile created",
        shouldSaveLog: true,
        // userId: req.user?.id || 0,
        userId:0,
        genericId: profile?.id?.toString(),
      })
    );
  } catch (error) {
    return res.status(400).json(
      await errorAndLogHandler({
        level: errorLevels.error,
        message: "Error creating profile: " + (error as Error).message,
        // userId: req.user?.id || 0,
        userId:0
      })
    );
  }
};

const getAll = async (req: Request, res: Response) => {
  try {
    const profiles = await Profile.findAll();

    return res.status(200).json({ success: true, data: profiles });
  } catch (error) {
    res.status(500).json(
      await errorAndLogHandler({
        level: errorLevels.error,
        message: `Error fetching profiles: ` + error.message,
        // userId: req.user?.id || 0,
        userId:0
      })
    );
  }
};

export const ProfileController = {
  create,
  getAll
};

Y mi archivo de rutas así:
import express from "express";
import { ProfileController } from "../controllers/profile.controller.js";

const router = express.Router();

router.post("/profiles", ProfileController.create);
router.get("/profiles", ProfileController.getAll);

export default router;


Pero sigo teniendo el mismo error, no lo entiendo, porque este controlador tiene la misma configuración:
import openai from "../config/openai.js";
import { Request, Response } from 'express';
import { prompt } from "../helpers/openAI/prompt.js";
import { getCompletion } from "../helpers/openAI/completion.js";
import mockDataToShapeFrontend  from '../db/mockDataToShapeFrontend.json' with { type: 'json' };;
const sendPlanPrompt = async (req: Request, res: Response) => {
  const { 
    objective, 
    restriction, 
    preference, 
    extras,
    language,
    unitSystem,
    weight,
    height,
    age,
    waist,
    neck,
    hip,
    gender
  } = req.body;

  if (!unitSystem||!language||!weight || !height || !age || !waist || !neck || !gender || !objective) {
    res.status(400).json({ 
      error: "Missing required fields" 
    });
    return;
  }

  try {
    const model="llama-3.3-70b-versatile";
    const pr = prompt(
            unitSystem,
            language,
            weight,
            height,
            age,
            waist,
            neck,
            hip,
            gender,
            objective,
            restriction,
            preference,
            extras
          );
    const completion = await getCompletion(
      model,
      "system",
      `You are a nutritionist AI that creates detailed meal plans. 
       Respond with PURE JSON only, no commentary or markdown.`,
      "user",
      pr,
      0.76,
      4290
    );
    const mockCompletion=mockDataToShapeFrontend;
    const mealPlan = JSON.parse(completion);

    if (!mealPlan.daily_calorie_target || !mealPlan.weekly_plan) {
      throw new Error("Incomplete meal plan structure");
    }

    res.json({
      ...mealPlan,
      meta: {
        generated_at: new Date().toISOString(),
        model: model
      }
    });
  } catch (error) {
    console.error("Error:", error);
    res.status(500).json({ 
      error: "Meal plan generation failed",
      details: error.message
    });
  }
};

export const OpenAI = {
  sendPlanPrompt
};

Y esta es la ruta de ese controlador, que no me da ningún error, e incluso ya está probado en postman:
import express from "express";
import { OpenAI } from "../controllers/openai.controller.js";

const router = express.Router();
router.post("/sendPrompt", OpenAI.sendPlanPrompt);
export default router;